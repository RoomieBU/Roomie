name: Deploy to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      ### ───────────────────── FRONTEND ─────────────────────
      - name: Install frontend dependencies
        working-directory: ./roomie-webapp
        run: npm ci

      - name: Build frontend
        working-directory: roomie-webapp
        run: npm run build

      ### ───────────────────── CLEAN EC2 ─────────────────────
      - name: Clean up existing files on EC2 (except node_modules)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo find /var/www/html -mindepth 1 -not -name 'node_modules' -exec rm -rf {} +
            sudo mkdir -p /var/www/html
            sudo chown $USER:$USER /var/www/html

      ### ───────────────────── COPY FRONTEND ─────────────────────
      - name: Copy built frontend to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "roomie-webapp/dist/"
          target: "/var/www/html/"
          overwrite: true
          strip_components: 1

      ### ───────────────────── COPY BACKEND ─────────────────────
      - name: Create backend directory on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo mkdir -p /opt/roomiebackend
            sudo chown $USER:$USER /opt/roomiebackend

      - name: Copy backend files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "roomiebackend"
          target: "/opt/roomiebackend"
          overwrite: true
          strip_components: 1

      ### ───────────────────── RESTART BACKEND ─────────────────────
      - name: Restart backend server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER_BACKDEV }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            export SSL_KEY="${{ secrets.SSL_KEY }}"
            if screen -list | grep -q "roomie_backend"; then
              screen -S roomie_backend -X quit
              echo "Old screen session terminated."
            else
              echo "No existing screen session found."
            fi
            screen -dmS roomie_backend bash -c 'export SSL_KEY=$SSL_KEY; ~/start; exec bash'
